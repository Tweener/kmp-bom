name: Publish [BoM - All libraries] to Maven Central

permissions:
  contents: read

on:
  workflow_dispatch:

  release:
    types: [ released ]

jobs:
  build-release:
    name: Build all libraries
    uses: ./.github/workflows/buildRelease.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  publish-libraries:
    name: Publish all libraries
    needs: build-release

    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      OSSRH_STAGING_PROFILE_ID: ${{ secrets.OSSRH_STAGING_PROFILE_ID }}

    strategy:
      matrix:
        include:
          - target: publishIosArm64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishIosSimulatorArm64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishIosX64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishAndroidReleasePublicationToSonatypeRepository
            os: ubuntu-latest
          - target: publishKotlinMultiplatformPublicationToSonatypeRepository
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: "zulu"

      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Gradle publish all libraries
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            ${{ matrix.target }}
            closeAndReleaseSonatypeStagingRepository
            -Psigning.gnupg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
            -Psigning.gnupg.keyName=${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
            -PsonatypeUsername=${{ secrets.OSSRH_USERNAME }}
            -PsonatypePassword=${{ secrets.OSSRH_PASSWORD }}
            -PsonatypeStagingProfileId=${{ secrets.OSSRH_STAGING_PROFILE_ID }}

  publish-bom:
    name: Publish BoM
    needs: publish-libraries

    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      OSSRH_STAGING_PROFILE_ID: ${{ secrets.OSSRH_STAGING_PROFILE_ID }}

    strategy:
      matrix:
        include:
          - target: publishBomPublicationToSonatypeRepository
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: "zulu"

      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Gradle publish BoM
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            ${{ matrix.target }}
            closeAndReleaseSonatypeStagingRepository
            -Psigning.gnupg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
            -Psigning.gnupg.keyName=${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
            -PsonatypeUsername=${{ secrets.OSSRH_USERNAME }}
            -PsonatypePassword=${{ secrets.OSSRH_PASSWORD }}
            -PsonatypeStagingProfileId=${{ secrets.OSSRH_STAGING_PROFILE_ID }}

  notify:
    name: Send Slack notification
    needs: publish-bom
    uses: ./.github/workflows/notify.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
